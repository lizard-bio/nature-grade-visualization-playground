Traceback (most recent call last):
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ameijer/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# diverging colorscale
fig = go.Figure(data=[go.Surface(z=z_data.values-200, colorscale=biolizard_divergent_pal(255), cmid=0)])
fig.update_layout(title=dict(text='Mt Bruno Elevation'), autosize=False,
                  scene_camera_eye=dict(x=1.87, y=0.88, z=-0.64),
                  width=500, height=500,
                  margin=dict(l=65, r=50, b=65, t=90))

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[15], line 2[0m
[1;32m      1[0m [38;5;66;03m# diverging colorscale[39;00m
[0;32m----> 2[0m fig [38;5;241m=[39m go[38;5;241m.[39mFigure(data[38;5;241m=[39m[[43mgo[49m[38;5;241;43m.[39;49m[43mSurface[49m[43m([49m[43mz[49m[38;5;241;43m=[39;49m[43mz_data[49m[38;5;241;43m.[39;49m[43mvalues[49m[38;5;241;43m-[39;49m[38;5;241;43m200[39;49m[43m,[49m[43m [49m[43mcolorscale[49m[38;5;241;43m=[39;49m[43mbiolizard_divergent_pal[49m[43m([49m[38;5;241;43m255[39;49m[43m)[49m[43m,[49m[43m [49m[43mcmid[49m[38;5;241;43m=[39;49m[38;5;241;43m0[39;49m[43m)[49m])
[1;32m      3[0m fig[38;5;241m.[39mupdate_layout(title[38;5;241m=[39m[38;5;28mdict[39m(text[38;5;241m=[39m[38;5;124m'[39m[38;5;124mMt Bruno Elevation[39m[38;5;124m'[39m), autosize[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m      4[0m                   scene_camera_eye[38;5;241m=[39m[38;5;28mdict[39m(x[38;5;241m=[39m[38;5;241m1.87[39m, y[38;5;241m=[39m[38;5;241m0.88[39m, z[38;5;241m=[39m[38;5;241m-[39m[38;5;241m0.64[39m),
[1;32m      5[0m                   width[38;5;241m=[39m[38;5;241m500[39m, height[38;5;241m=[39m[38;5;241m500[39m,
[1;32m      6[0m                   margin[38;5;241m=[39m[38;5;28mdict[39m(l[38;5;241m=[39m[38;5;241m65[39m, r[38;5;241m=[39m[38;5;241m50[39m, b[38;5;241m=[39m[38;5;241m65[39m, t[38;5;241m=[39m[38;5;241m90[39m))

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/plotly/graph_objs/_surface.py:2619[0m, in [0;36mSurface.__init__[0;34m(self, arg, autocolorscale, cauto, cmax, cmid, cmin, coloraxis, colorbar, colorscale, connectgaps, contours, customdata, customdatasrc, hidesurface, hoverinfo, hoverinfosrc, hoverlabel, hovertemplate, hovertemplatesrc, hovertext, hovertextsrc, ids, idssrc, legend, legendgroup, legendgrouptitle, legendrank, legendwidth, lighting, lightposition, meta, metasrc, name, opacity, opacityscale, reversescale, scene, showlegend, showscale, stream, surfacecolor, surfacecolorsrc, text, textsrc, uid, uirevision, visible, x, xcalendar, xhoverformat, xsrc, y, ycalendar, yhoverformat, ysrc, z, zcalendar, zhoverformat, zsrc, **kwargs)[0m
[1;32m   2617[0m _v [38;5;241m=[39m colorscale [38;5;28;01mif[39;00m colorscale [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m _v
[1;32m   2618[0m [38;5;28;01mif[39;00m _v [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 2619[0m     [38;5;28;43mself[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mcolorscale[39;49m[38;5;124;43m"[39;49m[43m][49m [38;5;241m=[39m _v
[1;32m   2620[0m _v [38;5;241m=[39m arg[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mconnectgaps[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m   2621[0m _v [38;5;241m=[39m connectgaps [38;5;28;01mif[39;00m connectgaps [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m _v

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/plotly/basedatatypes.py:4874[0m, in [0;36mBasePlotlyType.__setitem__[0;34m(self, prop, value)[0m
[1;32m   4870[0m         [38;5;28mself[39m[38;5;241m.[39m_set_array_prop(prop, value)
[1;32m   4872[0m     [38;5;66;03m# ### Handle simple property ###[39;00m
[1;32m   4873[0m     [38;5;28;01melse[39;00m:
[0;32m-> 4874[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_set_prop[49m[43m([49m[43mprop[49m[43m,[49m[43m [49m[43mvalue[49m[43m)[49m
[1;32m   4875[0m [38;5;28;01melse[39;00m:
[1;32m   4876[0m     [38;5;66;03m# Make sure properties dict is initialized[39;00m
[1;32m   4877[0m     [38;5;28mself[39m[38;5;241m.[39m_init_props()

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/plotly/basedatatypes.py:5218[0m, in [0;36mBasePlotlyType._set_prop[0;34m(self, prop, val)[0m
[1;32m   5216[0m         [38;5;28;01mreturn[39;00m
[1;32m   5217[0m     [38;5;28;01melse[39;00m:
[0;32m-> 5218[0m         [38;5;28;01mraise[39;00m err
[1;32m   5220[0m [38;5;66;03m# val is None[39;00m
[1;32m   5221[0m [38;5;66;03m# -----------[39;00m
[1;32m   5222[0m [38;5;28;01mif[39;00m val [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   5223[0m     [38;5;66;03m# Check if we should send null update[39;00m

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/plotly/basedatatypes.py:5213[0m, in [0;36mBasePlotlyType._set_prop[0;34m(self, prop, val)[0m
[1;32m   5210[0m validator [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_validator(prop)
[1;32m   5212[0m [38;5;28;01mtry[39;00m:
[0;32m-> 5213[0m     val [38;5;241m=[39m [43mvalidator[49m[38;5;241;43m.[39;49m[43mvalidate_coerce[49m[43m([49m[43mval[49m[43m)[49m
[1;32m   5214[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m err:
[1;32m   5215[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_skip_invalid:

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/_plotly_utils/basevalidators.py:1651[0m, in [0;36mColorscaleValidator.validate_coerce[0;34m(self, v)[0m
[1;32m   1646[0m             v [38;5;241m=[39m [
[1;32m   1647[0m                 [e[[38;5;241m0[39m], ColorValidator[38;5;241m.[39mperform_validate_coerce(e[[38;5;241m1[39m])] [38;5;28;01mfor[39;00m e [38;5;129;01min[39;00m v
[1;32m   1648[0m             ]
[1;32m   1650[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m v_valid:
[0;32m-> 1651[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mraise_invalid_val[49m[43m([49m[43mv[49m[43m)[49m
[1;32m   1653[0m [38;5;28;01mreturn[39;00m v

File [0;32m~/miniforge3/envs/nature-grade-visualization/lib/python3.12/site-packages/_plotly_utils/basevalidators.py:296[0m, in [0;36mBaseValidator.raise_invalid_val[0;34m(self, v, inds)[0m
[1;32m    293[0m             [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m inds:
[1;32m    294[0m                 name [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;124m[[39m[38;5;124m"[39m [38;5;241m+[39m [38;5;28mstr[39m(i) [38;5;241m+[39m [38;5;124m"[39m[38;5;124m][39m[38;5;124m"[39m
[0;32m--> 296[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    297[0m [38;5;250m            [39m[38;5;124;03m"""[39;00m
[1;32m    298[0m [38;5;124;03m    Invalid value of type {typ} received for the '{name}' property of {pname}[39;00m
[1;32m    299[0m [38;5;124;03m        Received value: {v}[39;00m
[1;32m    300[0m 
[1;32m    301[0m [38;5;124;03m{valid_clr_desc}"""[39;00m[38;5;241m.[39mformat(
[1;32m    302[0m                 name[38;5;241m=[39mname,
[1;32m    303[0m                 pname[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mparent_name,
[1;32m    304[0m                 typ[38;5;241m=[39mtype_str(v),
[1;32m    305[0m                 v[38;5;241m=[39m[38;5;28mrepr[39m(v),
[1;32m    306[0m                 valid_clr_desc[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mdescription(),
[1;32m    307[0m             )
[1;32m    308[0m         )

[0;31mValueError[0m: 
    Invalid value of type 'builtins.tuple' received for the 'colorscale' property of surface
        Received value: (0.0, 0.5764705882352941, 0.4392156862745098, 1.0)

    The 'colorscale' property is a colorscale and may be
    specified as:
      - A list of colors that will be spaced evenly to create the colorscale.
        Many predefined colorscale lists are included in the sequential, diverging,
        and cyclical modules in the plotly.colors package.
      - A list of 2-element lists where the first element is the
        normalized color level value (starting at 0 and ending at 1),
        and the second item is a valid color string.
        (e.g. [[0, 'green'], [0.5, 'red'], [1.0, 'rgb(0, 0, 255)']])
      - One of the following named colorscales:
            ['aggrnyl', 'agsunset', 'algae', 'amp', 'armyrose', 'balance',
             'blackbody', 'bluered', 'blues', 'blugrn', 'bluyl', 'brbg',
             'brwnyl', 'bugn', 'bupu', 'burg', 'burgyl', 'cividis', 'curl',
             'darkmint', 'deep', 'delta', 'dense', 'earth', 'edge', 'electric',
             'emrld', 'fall', 'geyser', 'gnbu', 'gray', 'greens', 'greys',
             'haline', 'hot', 'hsv', 'ice', 'icefire', 'inferno', 'jet',
             'magenta', 'magma', 'matter', 'mint', 'mrybm', 'mygbm', 'oranges',
             'orrd', 'oryel', 'oxy', 'peach', 'phase', 'picnic', 'pinkyl',
             'piyg', 'plasma', 'plotly3', 'portland', 'prgn', 'pubu', 'pubugn',
             'puor', 'purd', 'purp', 'purples', 'purpor', 'rainbow', 'rdbu',
             'rdgy', 'rdpu', 'rdylbu', 'rdylgn', 'redor', 'reds', 'solar',
             'spectral', 'speed', 'sunset', 'sunsetdark', 'teal', 'tealgrn',
             'tealrose', 'tempo', 'temps', 'thermal', 'tropic', 'turbid',
             'turbo', 'twilight', 'viridis', 'ylgn', 'ylgnbu', 'ylorbr',
             'ylorrd'].
        Appending '_r' to a named colorscale reverses it.


